#!/usr/bin/env bash

GLOBAL_CONFIG=$HOME/.config/debrewery/debrewery.cfg
GLOBAL_CONFIG_DIR=$HOME/.config/debrewery
DEBREW_REMOTE_PORT='22'


case $1 in
    "setup")
        mkdir -p $GLOBAL_CONFIG_DIR
        echo -n "Specify the role of this machine(developer or buildserver): "
        read DEBREW_MACHINE_ROLE
        case $DEBREW_MACHINE_ROLE in
            "developer")
                echo -n "Specify the buildserver name: "
                read DEBREW_REMOTE_NAME
                echo -n "Specify the buildserver URL(host:port): "
                read DEBREW_REMOTE_URL
                DEBREW_REMOTE_HOST=`echo $DEBREW_REMOTE_URL | cut -f 1 -d ':'`
                DEBREW_REMOTE_PORT=`echo $DEBREW_REMOTE_URL | cut -f 2 -d ':'`
                if [ -z $DEBREW_REMOTE_PORT ]; then
                    DEBREW_REMOTE_PORT='22'
                fi
                cat <<EOF > $GLOBAL_CONFIG
DEBREW_MACHINE_ROLE="$DEBREW_MACHINE_ROLE"
DEBREW_REMOTE_NAME="$DEBREW_REMOTE_NAME"
DEBREW_REMOTE_HOST="$DEBREW_REMOTE_HOST"
DEBREW_REMOTE_PORT="$DEBREW_REMOTE_PORT"
EOF
                ;;
            "buildserver")
                echo -n "Specify supported distributions(comma separated): "
                read DEBREW_DISTRIBUTIONS
                echo -n "Specify supported CPU architectures(comma separated): "
                read DEBREW_ARCHITECTURES
                cat <<EOF > $GLOBAL_CONFIG
DEBREW_MACHINE_ROLE="$DEBREW_MACHINE_ROLE"
DEBREW_DISTRIBUTIONS="`echo $DEBREW_DISTRIBUTIONS | tr ',' '\n'`"
DEBREW_ARCHITECTURES="`echo $DEBREW_ARCHITECTURES | tr ',' '\n'`"
EOF
                source $GLOBAL_CONFIG
                for distro in $DEBREW_DISTRIBUTIONS; do
                    for arch in $DEBREW_ARCHITECTURES;do
                        if [ -d /opt/chroot/$distro/$arch ];then
                            echo "Directory /opt/chroot/$distro/$arch already exists. Do you want to overwrite it?[y/N]:"
                            read answer
                            if [ $answer = 'y' ]; then
                                rm -fr /opt/chroot/$distro/$arch/*
                                debootstrap --arch=$arch --foreign $distro /opt/chroot/$distro/$arch/
                            else
                                echo "Leaving /opt/chroot/$distro/$arch untouched, hope this is ok."
                            fi
                        else
                            mkdir -p /opt/chroot/$distro/$arch/
                            debootstrap --arch=$arch --foreign $distro /opt/chroot/$distro/$arch/
                        fi
                        chroot /opt/chroot/$distro/$arch/ /debootstrap/debootstrap --second-stage
                    done
                done
                ;;
        esac
        ;;
    "enable")
        if [ -f $GLOBAL_CONFIG ]; then
            source $GLOBAL_CONFIG
            case $DEBREW_MACHINE_ROLE in
                "developer")
                    echo -n "Enter project name: "
                    read PROJECT_NAME
                    echo -n "Enter project version: "
                    read PROJECT_VERSION
                    cd $2
                    git init
                    git remote add $DEBREW_REMOTE_NAME "ssh://root@"$DEBREW_REMOTE_HOST":"$DEBREW_SSH_PORT"/opt/repo/"$2".git"
                    dh_make --createorig -s -y -p $PROJECT_NAME"_"$PROJECT_VERSION
                    cat <<EOF > debian/package.sh
export DEBFULLNAME="$DEBFULLNAME"
export DEBEMAIL="$DEBEMAIL"
NAME="$PROJECT_NAME"
FLAVOURS="any"
EOF
                    cd .. && git clone --bare $2 $2".git"
                    ssh -p $DEBREW_REMOTE_PORT "root@"$DEBREW_REMOTE_HOST mkdir -p /opt/repo
                    scp -P $DEBREW_REMOTE_PORT -r $2".git" "root@"$DEBREW_REMOTE_HOST":/opt/repo/"
                    ssh -p $DEBREW_REMOTE_PORT "root@"$DEBREW_REMOTE_HOST ln -s /usr/lib/debrewery/post-receive /opt/repo/"$2".git/hooks/post-receive
                    echo -e "\n\n\nProject successfully enabled"
                    ;;
                *)
                    echo "This command is only supported in \"developer\" machine role"
                    ;;
            esac
        else
            echo "No config file found"
            exit 1
        fi
        ;;
    "disable")
        if [ -f $GLOBAL_CONFIG ]; then
            source $GLOBAL_CONFIG
            case $DEBREW_MACHINE_ROLE in
                "developer")
                    cd $2 && git remote rm $DEBREW_REMOTE_NAME
                    echo "Remote \"$DEBREW_REMOTE_NAME\" deleted"
                    ;;
                *)
                    echo "This command is only supported in \"developer\" machine role"
                    ;;
            esac
        else
            echo "No config file found"
            exit 1
        fi
        ;;
    "upgrade")
        echo "Not implemented yet"
        ;;
    "doctor")
        echo "Not implemented yet"
        ;;
esac
